#!/bin/bash
echo "HC: $0"

scenarioName=$1

#set the HOLOCHAIN_SYSTEM_BIN variable
. holochain.system.checkInstalled
#set the HOLOCHAIN_APPNAME and HOLOCHAIN_APPDIR variables
. holochain.app.findAppDir


export dockerBaseRun=" -e LOCAL_USER_ID=`id -u $USER` "
export LOCAL_USER_ID=`id -u $USER`

. $HOLOCHAIN_SYSTEM_BIN/app/createRuntime || exit 1

#creates a single script for each role in the testScenario, which is run by the respective container
$HOLOCHAIN_SYSTEM_BIN/app/testScenario.createClusterScripts $scenarioName

#begin log for this session
logFile=$HOLOCHAIN_APPDIR/logs/testScenario.$scenarioName.log
printf "########################################################################\n########################################################################\n########################################################################\n"
echo "HC: testScenario $scenarioName started `date`" | tee -a $HOLOCHAIN_APPDIR/logs/cluster.log


####docker stuff
mkdir -p "$HOLOCHAIN_APPDIR/runtime/docker" > /dev/null
#need to harlink the Dockerfile for docker security
echo "ln $HOLOCHAIN_SYSTEM_BIN/../docker/app.docker/Dockerfile.chain.testing $HOLOCHAIN_APPDIR/runtime/docker/Dockerfile.chain.testing"
ln $HOLOCHAIN_SYSTEM_BIN/../docker/app.docker/Dockerfile.chain.testing $HOLOCHAIN_APPDIR/runtime/docker/Dockerfile.chain.testing
#build the image to use as the base for the bs instance and hc instances
echo "docker build --no-cache -f $HOLOCHAIN_APPDIR/runtime/docker/Dockerfile.chain.testing -t chain.testing $HOLOCHAIN_APPDIR"
docker build --no-cache -f $HOLOCHAIN_APPDIR/runtime/docker/Dockerfile.chain.testing -t chain.testing $HOLOCHAIN_APPDIR


#TODO COMMENT AND MAKE WORK
#CONSTANTS
systemAppDockerDir="$HOLOCHAIN_SYSTEM_BIN/../docker/app.docker"
appAppDockerDir="$HOLOCHAIN_APPDIR/runtime/docker"

#configureThis
dockerComposeSystem="$systemAppDockerDir/docker-compose.with.bs.syncedHCMultiNode.yml"
#constants
dockerComposeApp="$appAppDockerDir/docker-compose.runCluster.yml"
ln $dockerComposeSystem $dockerComposeApp

#these depend on what your dockerComposeSystem file requires
ln "$systemAppDockerDir/Dockerfile.syncedHCMultiNode" "$appAppDockerDir/Dockerfile.syncedHCMultiNode"
ln "$systemAppDockerDir/Dockerfile.seedService" "$appAppDockerDir/Dockerfile.seedService"
ln "$systemAppDockerDir/Dockerfile.bsService" "$appAppDockerDir/Dockerfile.bsService"
ln "$systemAppDockerDir/Dockerfile.syncedHCMultiNode.releaseSyncService" "$appAppDockerDir/Dockerfile.syncedHCMultiNode.releaseSyncService"



echo "$HOLOCHAIN_SYSTEM_BIN/app/runCluster $scenarioName $dockerComposeSystem $logFile"
$HOLOCHAIN_SYSTEM_BIN/app/runCluster $scenarioName $logFile